diff --git a/fisheye/bin/fisheyectl.sh b/fisheye/bin/fisheyectl.sh
index 9fe19eb..8437aed 100755
--- a/fisheye/bin/fisheyectl.sh
+++ b/fisheye/bin/fisheyectl.sh
@@ -1,4 +1,13 @@
-#!/bin/sh
+#!/bin/bash
+
+FISHEYE_HOME="/var/atlassian/application-data/fisheye"
+FISHEYE_CATALINA="/opt/atlassian/fisheye"
+
+CATALINA_PID=$FISHEYE_HOME/var/catalina.pid
+CATALINA_LOG=$FISHEYE_HOME/var/log/catalina.out
+
+mkdir -p $(dirname $CATALINA_PID)
+mkdir -p $(dirname $CATALINA_LOG)
 
 case "`uname`" in
   Darwin*) if [ -z "$JAVA_HOME" ] ; then
@@ -7,14 +16,16 @@ case "`uname`" in
            ;;
 esac
 
-PRG="$0"
-FISHEYE_HOME=`dirname "$PRG"`/..
-# make it fully qualified
-export FISHEYE_HOME=`cd "$FISHEYE_HOME" && pwd`
+if [ -z "$FISHEYE_CATALINA" ]; then
+    PRG="$0"
+    FISHEYE_CATALINA=`dirname "$PRG"`/..
+    # make it fully qualified
+    export FISHEYE_CATALINA=`cd "$FISHEYE_CATALINA" && pwd`
+fi
 
-if [ ! -f "$FISHEYE_HOME/fisheyeboot.jar" ] ; then
-  echo "Error: Could not find $FISHEYE_HOME/fisheyeboot.jar"
-  exit 1
+if [ ! -f "$FISHEYE_CATALINA/fisheyeboot.jar" ] ; then
+    echo "Error: Could not find $FISHEYE_CATALINA/fisheyeboot.jar"
+    exit 1
 fi
 
 if [ -z "$JAVACMD" ] ; then
@@ -39,32 +50,41 @@ if [ ! -x "$JAVACMD" ] ; then
   exit 1
 fi
 
-if [ -z "$FISHEYE_INST" ] ; then
-  FISHEYE_INST=$FISHEYE_HOME
-fi
-
-# Prepare FISHEYE_OPTS from other variables (like FISHEYE_LOAD_BYTEMAN)
-FISHEYE_OPTS=`$JAVACMD -cp $FISHEYE_HOME/fisheyeboot.jar com.cenqua.fisheye.boot.OptsSetter`
+FISHEYE_OPTS=" \
+-Dfile.encoding=UTF-8 \
+-XX:MaxPermSize=256m \
+-Xms2048m \
+-Xmx2048m \
+-Xss512k \
+-Datlassian.plugins.enable.wait=300 \
+-XX:+UnlockExperimentalVMOptions \
+-XX:+UseCGroupMemoryLimitForHeap \
+-XX:MaxRAMFraction=1 \
+"
 
-# Flags used by Fisheye
-FISHEYE_JVM_FLAGS="-Dfisheye.library.path=$FISHEYE_LIBRARY_PATH -Dfisheye.inst=$FISHEYE_INST -Djava.awt.headless=true -Djava.endorsed.dirs=$FISHEYE_HOME/lib/endorsed"
+FISHEYE_CMD="$JAVACMD $FISHEYE_OPTS -Dfisheye.library.path=$FISHEYE_LIBRARY_PATH -Dfisheye.inst=$FISHEYE_HOME -Djava.awt.headless=true -Djava.endorsed.dirs=$FISHEYE_CATALINA/lib/endorsed -jar $FISHEYE_CATALINA/fisheyeboot.jar"
 
 case "$1" in
-  "start")
-    cd $FISHEYE_INST
-    mkdir -p $FISHEYE_INST/var/log
-    CMD="$JAVACMD $FISHEYE_OPTS $FISHEYE_JVM_FLAGS -jar $FISHEYE_HOME/fisheyeboot.jar $@ $FISHEYE_ARGS"
-    echo "Starting Fisheye/Crucible... Output redirected to $FISHEYE_INST/var/log/fisheye.out"
-    nohup sh -c "exec $CMD" >> $FISHEYE_INST/var/log/fisheye.out 2>&1 &
-    ;;
-  "run")
-    CMD="$JAVACMD $FISHEYE_OPTS $FISHEYE_JVM_FLAGS -jar $FISHEYE_HOME/fisheyeboot.jar $@ $FISHEYE_ARGS"
-    echo "Running Fisheye/Crucible..."
-    exec $CMD
-    ;;
-  *)
-    # FISHEYE_OPTS may contain -Xmx, don't use it for 'stop' and other commands
-    CMD="$JAVACMD $FISHEYE_JVM_FLAGS -jar $FISHEYE_HOME/fisheyeboot.jar $@ $FISHEYE_ARGS"
-    exec $CMD
-    ;;
+    run)
+        cd $FISHEYE_HOME
+        sh -c "exec $FISHEYE_CMD $@ $FISHEYE_ARGS"
+        ;;
+    start)
+        cd $FISHEYE_HOME
+        nohup sh -c "exec $FISHEYE_CMD $@ $FISHEYE_ARGS" >> $CATALINA_LOG 2>&1 &
+        echo $! > "$CATALINA_PID"
+
+        if [ $? = 0 ]; then
+            echo "Starting Fisheye/Crucible... Output redirected to $CATALINA_LOG"
+        else
+            if [-f "$CATALINA_PID" ]; then
+                rm -f "$CATALINA_PID" >/dev/null 2>&1
+            fi
+            echo "There was a problem starting the Fisheye/Crucible"
+        fi
+        ;;
+    stop)
+        exec $FISHEYE_CMD $@ $FISHEYE_ARGS
+        rm -f "$CATALINA_PID" >/dev/null 2>&1
+        ;;
 esac
diff --git a/fisheye/bin/start.sh b/fisheye/bin/start.sh
index d375ed0..97b8c47 100755
--- a/fisheye/bin/start.sh
+++ b/fisheye/bin/start.sh
@@ -1,21 +1,28 @@
-#!/bin/sh
-
-case "`uname`" in
-  Darwin*) if [ -z "$JAVA_HOME" ] ; then
-             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Home
-           fi
-           ;;
-esac
+#!/bin/bash
 
+# resolve links - $0 may be a softlink
 PRG="$0"
-FISHEYE_HOME=`dirname "$PRG"`/..
-# make it fully qualified
-export FISHEYE_HOME=`cd "$FISHEYE_HOME" && pwd`
+while [ -h "$PRG" ]; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`/"$link"
+    fi
+done
+PRGDIR=`dirname "$PRG"`
 
-if [ ! -f "$FISHEYE_HOME/fisheyeboot.jar" ] ; then
-  echo "Error: Could not find $FISHEYE_HOME/fisheyeboot.jar"
-  exit 1
+PRGRUNMODE=false
+if [ "$1" = "-fg" ] || [ "$1" = "run" ]  ; then
+    shift
+    PRGRUNMODE=true
+else
+    echo "To run Fisheye in the foreground, start the server with $0 -fg"
 fi
 
-exec "$FISHEYE_HOME/bin/fisheyectl.sh" start "$@"
-
+if [ "$PRGRUNMODE" = "true" ] ; then
+    exec $PRGDIR/fisheyectl.sh run "$@"
+else
+    exec $PRGDIR/fisheyectl.sh start "$@"
+fi
